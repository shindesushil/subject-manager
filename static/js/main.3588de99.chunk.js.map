{"version":3,"sources":["styles/commonStyles.js","component/loading.js","action/action-types.js","reducer/reducer.js","reducer/uireducer.js","centralState/store.js","firebase/firebase.js","controller/fetchAllSubjects.js","action/action.js","controller/subjectController.js","component/subjects.js","controller/topicsController.js","component/topics.js","controller/notesController.js","component/notes.js","component/main.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","bar","padding","background","boxShadow","button","position","right","color","head","fontSize","formContainer","bottom","width","form","inputfield","addBtn","marginTop","closeBtn","marginLeft","borderRadius","listItem","borderBottom","editDelete","icon","waitMessage","display","alignItems","justifyContent","container","height","flexDirection","gap","opacity","Loading","classes","className","CircularProgress","ADD_SUBJECT","REMOVE_SUBJECT","UPDATE_SUBJECT","ADD_TOPIC","REMOVE_TOPIC","UPDATE_TOPIC","ADD_NOTE","REMOVE_NOTE","UPDATE_NOTE","FETCHING_DATA","FETCHED_DATA","FETCH_DATA_ERROR","SET_ACTIVE_SUBJECT","SET_ACTIVE_TOPIC","initialState","isDataFetching","error","data","makeState","dataFetching","stateError","stateData","isOperationGoingOn","reducer","state","action","type","payload","push","id","name","topics","temp","filter","subject","tempState","subToUpdate","sub","addTopicData","targetSubject","subjectID","console","log","topicID","topicName","notes","newData","map","addTopicData1","targetSubject1","topic","newData1","addTopicData2","targetSubject2","topicToUpdate","newData2","addNoteData","addNoteSubject","addNoteTopic","noteToAdd","noteData","deleteNoteData","deleteNoteSubject","deleteNoteTopic","note","noteID","updateNoteData","updateNoteSubject","updateNoteTopic","newNote","activeSubject","activeTopic","stateActiveSubject","stateActiveTopic","op","composeEnhancers","composeWithDevTools","rootReducer","combineReducers","subjects","uireducer","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","fetchAllSubjects","dispatch","allSubjects","db1","firestore","collection","get","then","snapshot","forEach","subjectName","allTopics","doc","topicsSnapshot","allNotes","notesSnapshot","currentNote","catch","currentTopic","currentSubject","fetchDataError","insertSubject","add","docRef","deleteSubject","delete","connect","fetch","getTopics","setActiveSubject","addSubject","removeSubject","updateSubject","getState","a","set","newSubject","modifySubject","useState","subjectToAdd","setSubjectToAdd","addForm","setAddForm","updateForm","setUpdateForm","subjectToModify","setSubjectToModify","useEffect","AppBar","Toolbar","IconButton","onClick","Add","List","ListItem","ButtonGroup","subID","Edit","Delete","Fade","in","Close","FormControl","Input","value","onChange","e","target","placeholder","Button","insertTopic","tName","deleteTopic","tID","modifyTopic","updateDetails","getNotes","setActiveTopic","addTopic","removeTopic","updateTopic","topicToAdd","setTopicToAdd","setTopics","length","insertNote","noteDetails","deleteNote","modifyNote","addNote","removeNote","nID","updateNote","setNotes","addNoteForm","setAddNoteForm","updateNoteForm","setUpdateNoteForm","noteToUpdate","setNoteToUpdate","setNoteToAdd","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3588de99.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/styles\"\r\n\r\nexport const useStyles = makeStyles({\r\n    bar:{\r\n      padding: '5px',\r\n      background: '#266bff',\r\n      boxShadow: 'none'\r\n    },\r\n    button:{\r\n      position: 'absolute',\r\n      right: '10px',\r\n      color:'#fff',\r\n      boxShadow: '0px 0px 3px #fff'\r\n    },\r\n    head:{\r\n      fontSize: '25px'\r\n    },\r\n    formContainer:{\r\n      position : 'absolute',\r\n      bottom: '0px',\r\n      width: '95%',\r\n      padding:'10px',\r\n      background:'#d6e6ff'\r\n  },\r\n  form:{\r\n      width: '100%'\r\n  },\r\n  inputfield:{\r\n      width: '100%',\r\n      '&::placeholder':{\r\n          color:'#fff'\r\n      }\r\n  },\r\n  addBtn:{\r\n      background: '#266bff',\r\n      color:'#fff',\r\n      marginTop: '10px',\r\n      '&:hover':{\r\n          background:'#003c99'\r\n      }\r\n  },\r\n  closeBtn: {\r\n    marginLeft: '90%',\r\n    padding: '5px',\r\n    borderRadius:'inherit',\r\n    '&:hover':{\r\n      background:'#fff',\r\n    }\r\n  },\r\n  listItem:{\r\n    width:'100%',\r\n    fontSize: '16px',\r\n    borderBottom: '1px solid #f0f0f0',\r\n    padding: '20px'\r\n},\r\neditDelete:{\r\n    position:'absolute',\r\n    right:'10px'\r\n},\r\nicon:{\r\n        '&:hover':{\r\n            background: 'transparent',\r\n            color: '#266bff'  // main color here\r\n        }\r\n},\r\nwaitMessage:{\r\n    color: '#c7c7c7',\r\n    fontSize : '16px',\r\n    display: 'flex',\r\n    alignItems:'center',\r\n    justifyContent:'center',\r\n  },\r\n  container:{\r\n    height:'100vh',\r\n    width: '100%',\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    alignItems:'center',\r\n    justifyContent:'center',\r\n    gap:'30px',\r\n    background: 'transparent',\r\n    opacity:'1'\r\n  }\r\n  })\r\n  \r\n\r\n","import React from 'react'\r\n\r\nimport { CircularProgress } from '@material-ui/core'\r\n\r\nimport { useStyles } from '../styles/commonStyles'\r\n\r\nexport const Loading = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <div className={classes.container}>\r\n            <CircularProgress color=\"primary\" />\r\n            <h2>Please Wait</h2>\r\n        </div>\r\n    )\r\n}","export const ADD_SUBJECT = 'ADD_SUBJECT'\r\nexport const REMOVE_SUBJECT = 'REMOVE_SUBJECT'\r\nexport const UPDATE_SUBJECT = 'UPDATE_SUBJECT'\r\nexport const ADD_TOPIC = 'ADD_TOPIC'\r\nexport const REMOVE_TOPIC = 'REMOVE_TOPIC'\r\nexport const UPDATE_TOPIC = 'UPDATE_TOPIC'\r\nexport const ADD_NOTE = 'ADD_NOTE'\r\nexport const REMOVE_NOTE = 'REMOVE_NOTE'\r\nexport const UPDATE_NOTE = 'UPDATE_NOTE'\r\nexport const FETCHING_DATA = 'FETCHING_DATA'\r\nexport const FETCHED_DATA = 'FETCHED_DATA'\r\nexport const FETCH_DATA_ERROR = 'FETCH_DATA_ERROR'\r\n\r\n\r\n// UI Actions\r\nexport const SET_ACTIVE_SUBJECT = 'SET_ACTIVE_SUBJECT'\r\nexport const SET_ACTIVE_TOPIC = 'SET_ACTIVE_TOPIC'\r\nexport const OPERATION_GOING_ON = 'OPERATION_GOING_ON'\r\nexport const OPERATION_DONE = 'OPERATION_DONE'","import {\r\n    ADD_NOTE,\r\n    ADD_SUBJECT,\r\n    ADD_TOPIC,\r\n    REMOVE_NOTE,\r\n    REMOVE_SUBJECT,\r\n    REMOVE_TOPIC,\r\n    UPDATE_NOTE,\r\n    UPDATE_SUBJECT,\r\n    UPDATE_TOPIC,\r\n    FETCHING_DATA,\r\n    FETCHED_DATA,\r\n    FETCH_DATA_ERROR\r\n} from '../action/action-types'\r\n\r\nconst initialState = {\r\n    isDataFetching : false,\r\n    error: '',\r\n    data: [],\r\n}\r\n\r\nconst makeState = (dataFetching, stateError, stateData) => {\r\n    return {\r\n        isDataFetching: dataFetching,\r\n        error: stateError,\r\n        data: stateData,\r\n        isOperationGoingOn: false\r\n    }\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case FETCHING_DATA:\r\n            return makeState(true,'',[])\r\n\r\n        case FETCHED_DATA:\r\n            return makeState(false,'',action.payload)\r\n\r\n        case FETCH_DATA_ERROR:\r\n            return makeState(false,action.payload,[])\r\n\r\n        case ADD_SUBJECT:\r\n            let data = state\r\n            data.data.push({\r\n                id: action.payload.id,\r\n                name: action.payload.name,\r\n                topics:[]\r\n            })\r\n            return data;\r\n\r\n        case REMOVE_SUBJECT:\r\n            let temp = state;\r\n            temp.data = temp.data.filter(subject => subject.id !== action.payload)\r\n            return temp\r\n\r\n        case UPDATE_SUBJECT:\r\n            let tempState = state\r\n            let subToUpdate = tempState.data.filter(sub => sub.id === action.payload.id)\r\n            tempState.data = tempState.data.filter(sub => sub.id !== action.payload.id)  // delete subject from state\r\n            subToUpdate.name = action.payload.name\r\n            tempState.data.push(subToUpdate)  // add updated subject to state\r\n            return tempState\r\n\r\n        case ADD_TOPIC:\r\n            let addTopicData = state\r\n            let targetSubject = addTopicData.data.filter(subject => subject.id === action.payload.subjectID)  // shuffled required subject\r\n            console.log('Target Subject : ', targetSubject);\r\n            targetSubject[0].topics.push({id: action.payload.topicID, name: action.payload.topicName, notes: []})  // added topic to that subject's topics array\r\n            let newData = addTopicData\r\n            newData.data = addTopicData.data.map(subject => {  \r\n                if(subject.id === action.payload.subjectID)        // replaced previous subject object with new one\r\n                    return targetSubject[0]\r\n                return subject\r\n            })\r\n            return newData\r\n\r\n        case REMOVE_TOPIC:\r\n            let addTopicData1 = state\r\n            \r\n            let targetSubject1 = addTopicData1.data.filter(subject => subject.id === action.payload.subjectID)  // shuffled targeted subject\r\n            addTopicData1.data = addTopicData1.data.filter(subject => subject.id !== action.payload.subjectID)  // deleting that subject from state\r\n            \r\n            targetSubject1[0].topics = targetSubject1[0].topics.filter(topic =>  topic.id !== action.payload.topicID)  // deleting that topic from target subject's topics array\r\n            console.log('Target Subject : ', targetSubject1);\r\n            \r\n            let newData1 = addTopicData1                // whole state is in newData1\r\n            newData1.data.push(targetSubject1[0])       // adding updated subject to state\r\n            \r\n            return newData1\r\n\r\n        case UPDATE_TOPIC:\r\n            let addTopicData2 = state\r\n\r\n            let targetSubject2 = addTopicData2.data.filter(subject => subject.id === action.payload.subjectID)  // picking targeted subject from state\r\n            addTopicData2.data = addTopicData2.data.filter(subject => subject.id !== action.payload.subjectID)  // deleting that subject from state\r\n            \r\n            let topicToUpdate = targetSubject2[0].topics.filter(topic =>  topic.id === action.payload.topicID)[0]  // picking topic to update from subject\r\n            targetSubject2[0].topics = targetSubject2[0].topics.filter(topic =>  topic.id !== action.payload.topicID)  // deleting that topic from target subject's topics array\r\n            topicToUpdate.name = action.payload.topicName  // updating that topic\r\n            targetSubject2[0].topics.push(topicToUpdate)   // putting that topic back in subject\r\n            \r\n            console.log('Target Subject : ', targetSubject2);\r\n            let newData2 = addTopicData2                // whole state is in newData1\r\n            newData2.data.push(targetSubject2[0])       // adding updated subject to state\r\n            return newData2\r\n\r\n        case ADD_NOTE:\r\n            let addNoteData = state\r\n\r\n            let addNoteSubject = addNoteData.data.filter(subject => subject.id === action.payload.subjectID)[0]     // Pick target subject from state\r\n            addNoteData.data = addNoteData.data.filter(subject => subject.id !== action.payload.subjectID)               // Delete target subject from state\r\n\r\n            let addNoteTopic = addNoteSubject.topics.filter(topic => topic.id === action.payload.topicID)[0]        // Pick target topic from subject\r\n            addNoteSubject.topics = addNoteSubject.topics.filter(topic => topic.id !== action.payload.topicID)             // Delete target topic from subject\r\n\r\n            let noteToAdd = {\r\n                id : action.payload.id,\r\n                noteData: action.payload.noteData\r\n            }\r\n\r\n            addNoteTopic.notes.push(noteToAdd)              // Add new note to topic\r\n            addNoteSubject.topics.push(addNoteTopic)        // topic to subject\r\n            addNoteData.data.push(addNoteSubject)           // subject to state\r\n\r\n            return addNoteData;\r\n\r\n        case REMOVE_NOTE:\r\n            let deleteNoteData = state\r\n\r\n            let deleteNoteSubject = deleteNoteData.data.filter(subject => subject.id === action.payload.subjectID)[0]       // Pick target subject from state\r\n            deleteNoteData.data = deleteNoteData.data.filter(subject => subject.id !== action.payload.subjectID)                 // Delete target subject from state\r\n\r\n            let deleteNoteTopic = deleteNoteSubject.topics.filter(topic => topic.id === action.payload.topicID)[0]         // Pick target topic from subject\r\n            deleteNoteSubject.topics = deleteNoteSubject.topics.filter(topic => topic.id !== action.payload.topicID)              // Delete target topic from subject\r\n\r\n            deleteNoteTopic.notes = deleteNoteTopic.notes.filter(note => note.id !== action.payload.noteID)             // delete target note from topic\r\n\r\n            console.log('Delete note subject : ', deleteNoteSubject);\r\n            deleteNoteSubject.topics.push(deleteNoteTopic)      // Add topic to to subject\r\n            deleteNoteData.data.push(deleteNoteSubject)         // Add subject to state\r\n\r\n            return deleteNoteData;\r\n\r\n        case UPDATE_NOTE:\r\n            let updateNoteData = state\r\n\r\n            let updateNoteSubject = updateNoteData.data.filter(subject => subject.id === action.payload.subjectID)[0]       // Pick target subject from state\r\n            updateNoteData.data = updateNoteData.data.filter(subject => subject.id !== action.payload.subjectID)                 // Delete target subject from state\r\n\r\n            let updateNoteTopic = updateNoteSubject.topics.filter(topic => topic.id === action.payload.topicID)[0]         // Pick target topic from subject\r\n            updateNoteSubject.topics = updateNoteSubject.topics.filter(topic => topic.id !== action.payload.topicID)              // Delete target topic from subject\r\n\r\n            updateNoteTopic.notes = updateNoteTopic.notes.filter(note => note.id !== action.payload.noteID)             // delete target note from topic\r\n            let newNote = {\r\n                id: action.payload.noteID,\r\n                noteData: action.payload.noteData\r\n            }\r\n            updateNoteTopic.notes.push(newNote)\r\n\r\n            console.log('Delete note subject : ', updateNoteSubject);\r\n            updateNoteSubject.topics.push(updateNoteTopic)      // Add topic to to subject\r\n            updateNoteData.data.push(updateNoteSubject)         // Add subject to state\r\n\r\n            return updateNoteData;\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// export default reducer","import {\r\n    SET_ACTIVE_SUBJECT,\r\n    SET_ACTIVE_TOPIC\r\n} from '../action/action-types'\r\n\r\nconst initialState = {\r\n    activeSubject: '',\r\n    activeTopic: '',\r\n    isOperationGoingOn: false\r\n}\r\n\r\nconst makeState = (stateActiveSubject, stateActiveTopic, op) => {\r\n    return {\r\n        activeSubject: stateActiveSubject,\r\n        activeTopic: stateActiveTopic,\r\n        isOperationGoingOn: op\r\n    }\r\n}\r\n\r\n\r\nexport const uireducer = (state = initialState, action) => { \r\n    switch(action.type){\r\n        case SET_ACTIVE_SUBJECT:\r\n            // this statement is printing new state in console, but not triggering re-render\r\n            return makeState(action.payload,'', state.isOperationGoingOn);\r\n        case SET_ACTIVE_TOPIC:\r\n            return makeState(state.activeSubject, action.payload, state.isOperationGoingOn)\r\n        case 'RESET_UI':\r\n            return makeState('', '', state.isOperationGoingOn)\r\n        case 'RESET_NOTES':\r\n            return makeState(state.activeSubject, '', state.isOperationGoingOn)\r\n        case 'OPERATION_GOING_ON':\r\n            console.log('State i operation goin on :', state);\r\n            return {\r\n                activeSubject: state.activeSubject,\r\n                activeTopic: state.activeTopic,\r\n                isOperationGoingOn: true\r\n            }\r\n        case 'OPERATION_DONE':\r\n            console.log('State in operation done : ', state);\r\n            return {\r\n                activeSubject: state.activeSubject,\r\n                activeTopic: state.activeTopic,\r\n                isOperationGoingOn: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport {reducer}  from '../reducer/reducer'\r\nimport { uireducer } from '../reducer/uireducer'\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconsole.log(reducer);\r\n\r\nconst composeEnhancers = composeWithDevTools({})\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    subjects: reducer,\r\n    uireducer\r\n})\r\n\r\nconsole.log('Reducer in store : ', reducer);\r\n\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    // applyMiddleware(thunk)\r\n    composeEnhancers(applyMiddleware(thunk))\r\n    )\r\n\r\nexport default store","import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBnREZw8NbVALl7s8kAoIvhlvfUhgZdct0\",\r\n    authDomain: \"subject-manager-aa0ba.firebaseapp.com\",\r\n    projectId: \"subject-manager-aa0ba\",\r\n    storageBucket: \"subject-manager-aa0ba.appspot.com\",\r\n    messagingSenderId: \"421051326574\",\r\n    appId: \"1:421051326574:web:b4d420146ff0836d2c467f\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase","import {\r\n    fetchingData,\r\n    fetchedData,\r\n    fetchDataError\r\n} from '../action/action'\r\n\r\nimport firebase from '../firebase/firebase'\r\n\r\n\r\nexport const fetchAllSubjects = () => {\r\n    console.log('IN fetch all subjects');\r\n    return (dispatch) => {\r\n        console.log('in thunk');\r\n        dispatch(fetchingData())\r\n\r\n        let allSubjects = []\r\n        const db1 = firebase.firestore()\r\n        return db1.collection('subjects')\r\n            .get()\r\n            .then(snapshot => {\r\n                snapshot.forEach((subject) => {\r\n                    \r\n                    let subjectID = subject.id\r\n                    let subjectName = subject.data().name\r\n\r\n                    // Fetch topics now---------------------------------------------------------\r\n                    let allTopics = []\r\n                    db1.collection('subjects')\r\n                        .doc(subjectID)\r\n                        .collection('Topics')\r\n                        .get()\r\n                        .then(topicsSnapshot => {\r\n                            topicsSnapshot.forEach(topic => {\r\n                                let topicID = topic.id\r\n                                let topicName = topic.data().name\r\n\r\n                                // Fetch Notes Now------------------------------------------------\r\n                                let allNotes = []\r\n                                db1.collection('subjects')\r\n                                    .doc(subjectID)\r\n                                    .collection('Topics')\r\n                                    .doc(topicID)\r\n                                    .collection('Notes')\r\n                                    .get()\r\n                                    .then(notesSnapshot => {\r\n                                        notesSnapshot.forEach(note => {\r\n                                            let currentNote = {\r\n                                                id: note.id,\r\n                                                noteData: note.data().note\r\n                                            }\r\n                                            allNotes.push(currentNote)\r\n                                        })\r\n                                    })\r\n                                    .catch(error => {\r\n                                        console.log('Error in notes : ', error);\r\n                                    })\r\n\r\n                                let currentTopic = {\r\n                                    id: topicID,\r\n                                    name: topicName,\r\n                                    notes: allNotes\r\n                                }\r\n                                allTopics.push(currentTopic)\r\n                            })\r\n                        })\r\n                        .catch(error => {\r\n                            console.log('Error in topics : ', error);\r\n                        })\r\n\r\n                        let currentSubject = {\r\n                            id: subjectID,\r\n                            name: subjectName,\r\n                            topics: allTopics\r\n                        }\r\n                        allSubjects.push(currentSubject)\r\n                })\r\n                console.log(allSubjects);\r\n                dispatch(fetchedData(allSubjects))\r\n            })\r\n            .catch(error => {\r\n                console.log('Error in subjects : ',error);\r\n                dispatch(fetchDataError(error))\r\n            })\r\n    }\r\n}\r\n\r\n","import {\r\n    ADD_SUBJECT,\r\n    REMOVE_SUBJECT,\r\n    UPDATE_SUBJECT,\r\n    ADD_TOPIC,\r\n    REMOVE_TOPIC,\r\n    UPDATE_TOPIC,\r\n    ADD_NOTE,\r\n    REMOVE_NOTE,\r\n    UPDATE_NOTE,\r\n    FETCHING_DATA,\r\n    FETCHED_DATA,\r\n    FETCH_DATA_ERROR,\r\n    SET_ACTIVE_SUBJECT,\r\n    SET_ACTIVE_TOPIC,\r\n    OPERATION_GOING_ON,\r\n    OPERATION_DONE\r\n} from './action-types'\r\n\r\nexport const addSubject = subject => ({ // {id: id, name: String}\r\n    type: ADD_SUBJECT,\r\n    payload: subject\r\n})\r\n\r\nexport const removeSubject = id => ({  // id from firebase\r\n    type: REMOVE_SUBJECT,\r\n    payload: id\r\n})\r\n\r\nexport const updateSubject = newSubject => ({  // { id: id, name : String }\r\n    type: UPDATE_SUBJECT,\r\n    payload: newSubject\r\n})\r\n\r\nexport const addTopic = topic => ({  // { subjectID: id, topicName: String }\r\n    type: ADD_TOPIC,\r\n    payload: topic\r\n})\r\n\r\nexport const removeTopic = topic => ({ // { subjectID: id, topicID: id }\r\n    type: REMOVE_TOPIC,\r\n    payload: topic\r\n})\r\n\r\nexport const updateTopic = topic => ({  // { subjectID: id, topicID: id, topicName: String }\r\n    type: UPDATE_TOPIC,\r\n    payload: topic\r\n})\r\n\r\nexport const addNote = note => ({  // { subjectID: id, topicID: id, note: String }\r\n    type: ADD_NOTE,\r\n    payload: note\r\n})\r\n\r\nexport const removeNote = note => ({ // { subjectID: id, topicID: id, noteID: id }\r\n    type: REMOVE_NOTE,\r\n    payload: note\r\n})\r\n\r\nexport const updateNote = note => ({ // { subjectID: id, topicID: id, noteID: id, newNote: String }\r\n    type: UPDATE_NOTE,\r\n    payload: note\r\n})\r\n\r\nexport const fetchingData = () => ({\r\n    type: FETCHING_DATA,\r\n    payload: '',\r\n})\r\n\r\nexport const fetchedData = data => ({ // array of subject objects\r\n    type: FETCHED_DATA,\r\n    payload: data\r\n})\r\n\r\nexport const fetchDataError = error => ({  // { message : string }\r\n    type: FETCH_DATA_ERROR,\r\n    payload : error\r\n})\r\n\r\n\r\n// UI Actions\r\nexport const setActiveSubject = subjectID => ({ // id\r\n    type: SET_ACTIVE_SUBJECT,\r\n    payload: subjectID\r\n})\r\n\r\nexport const setActiveTopic = topicID => ({\r\n    type: SET_ACTIVE_TOPIC,\r\n    payload: topicID\r\n})\r\n\r\nexport const operationGoingOn = () => ({\r\n    type: OPERATION_GOING_ON,\r\n    payload: ''\r\n})\r\n\r\nexport const operationDone = () => ({\r\n    type: OPERATION_DONE,\r\n    payload: ''\r\n})","import store from '../centralState/store'\r\n\r\nimport {\r\n    addSubject,\r\n    removeSubject,\r\n    updateSubject,\r\n    operationDone,\r\n    operationGoingOn\r\n} from '../action/action'\r\n\r\nimport firebase from '../firebase/firebase'\r\n\r\nexport const insertSubject = (subjectName) => {\r\n    console.log('In subject controller : ', subjectName);\r\n    return (dispatch) => {\r\n        dispatch(operationGoingOn())\r\n        console.log('in subject thunk');\r\n        const db = firebase.firestore()\r\n\r\n        return db.collection('subjects')\r\n                    .add({\r\n                        name: subjectName\r\n                    }).then(docRef => {\r\n                        console.log('DOC Ref : ',docRef);\r\n                        dispatch(addSubject({id: docRef.id, name: subjectName}))\r\n                        console.log('dispatch in then');\r\n                        dispatch(operationDone())\r\n                    }).catch(error => {\r\n                        console.log('Error: ', error);\r\n                        console.log('dispatch in catch');\r\n                        dispatch(operationDone())\r\n                    })\r\n\r\n    }\r\n}\r\n\r\nexport const deleteSubject = subjectID => {\r\n    return dispatch => {\r\n        dispatch(operationGoingOn())\r\n        const db = firebase.firestore()\r\n        return db.collection('subjects')\r\n            .doc(subjectID)\r\n            .delete()\r\n            .then((docRef) => {\r\n                dispatch(removeSubject(subjectID))\r\n                dispatch({type: 'RESET_UI', payload:''})\r\n                dispatch(operationDone())\r\n            })\r\n            .catch((error) => {\r\n                console.log('Error while deleting subject : ', error);\r\n                dispatch({type: 'RESET_UI', payload:''})\r\n                dispatch(operationDone())\r\n            })\r\n    }\r\n}\r\n\r\nexport const modifySubject = subject => {\r\n    console.log('state in modify 1 : ', store.getState());\r\n    return async dispatch => {\r\n        dispatch(operationGoingOn())\r\n        const db = firebase.firestore()\r\n        db.collection('subjects')\r\n            .doc(subject.id)\r\n            .set({\r\n                name: subject.name\r\n            })\r\n            .then((docRef => {\r\n                dispatch(updateSubject({id: subject.id, name: subject.name}))\r\n                dispatch(operationDone())\r\n            }))\r\n            .catch((error) => {\r\n                console.log('Error while updating subject : ', error);\r\n                dispatch(operationDone())\r\n            })\r\n    }\r\n}","import React, {useEffect, useState} from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport store from '../centralState/store'\r\nimport { setActiveSubject } from '../action/action'\r\n\r\nimport { fetchAllSubjects } from '../controller/fetchAllSubjects'\r\n\r\nimport { insertSubject, deleteSubject, modifySubject } from '../controller/subjectController'\r\n\r\nimport { useStyles } from '../styles/commonStyles'\r\n\r\nimport { \r\n    List,\r\n    ListItem,\r\n    IconButton,\r\n    ButtonGroup,\r\n    AppBar,\r\n    Toolbar,\r\n    FormControl,\r\n    Input,\r\n    Button,\r\n    Fade\r\n } from '@material-ui/core'\r\n import { \r\n     Edit,\r\n     Delete,\r\n     Add,\r\n     Close\r\n} from '@material-ui/icons'\r\n\r\n\r\n\r\n\r\nconst Subjects = ({subjects, uireducer, fetch, getTopics, addSubject, removeSubject, updateSubject}) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [subjectToAdd, setSubjectToAdd] = useState('')\r\n    const [addForm ,setAddForm] = useState(false)\r\n    const [updateForm ,setUpdateForm] = useState(false)\r\n\r\n    let [subjectToModify, setSubjectToModify] = useState('')\r\n    const setSubjectToUpdate = (subID) => {\r\n        setSubjectToModify(subID)\r\n        setUpdateForm(true)\r\n        setSubjectToAdd('')\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('In use effect');\r\n        fetch()\r\n    }, [])\r\n\r\n\r\n    return (\r\n            <>\r\n                <AppBar position=\"static\">\r\n                  <Toolbar>\r\n                    <p className={classes.head}>Subjects</p>\r\n                    <IconButton className={classes.button} onClick={() => {setAddForm(true); setSubjectToAdd('')}}>\r\n                      <Add />\r\n                    </IconButton>\r\n                  </Toolbar>\r\n               </AppBar> \r\n\r\n               {\r\n                   uireducer.isOperationGoingOn ? <h1>Please Wait</h1> : ''\r\n               }\r\n\r\n                <List>\r\n                    {\r\n                    !subjects.isDataFetching && subjects.data ? subjects.data.map(subject => {\r\n                        return (\r\n                            <ListItem button className={classes.listItem} id={subject.id} key={subject.id} onClick={() => getTopics(subject.id)}>\r\n                                {subject.name}\r\n                                <ButtonGroup className={classes.editDelete}>\r\n                                        <IconButton className={classes.icon} onClick={() => {setSubjectToUpdate(subject.id); setSubjectToAdd(subject.name)}}>\r\n                                            <Edit />\r\n                                        </IconButton>\r\n                                        <IconButton className={classes.icon} onClick={() => removeSubject(subject.id)}>\r\n                                            <Delete />\r\n                                        </IconButton>\r\n                                </ButtonGroup>\r\n                            </ListItem>\r\n                        )\r\n                    }) : <div className={classes.waitMessage}><p>Fetching Subjects</p></div>\r\n                    }\r\n                </List>\r\n\r\n                <Fade in={addForm || updateForm}>\r\n                    <div className={classes.formContainer}>\r\n                        <IconButton className={classes.closeBtn} onClick={() => { setAddForm(false); setUpdateForm(false) }}>\r\n                            <Close />\r\n                        </IconButton>\r\n                        <FormControl className={classes.form}>\r\n                            <Input \r\n                                value={subjectToAdd}\r\n                                onChange={(e) => setSubjectToAdd(e.target.value)}\r\n                                placeholder={addForm ? \"Add Subject\" : \"Update Subject\"} \r\n                                className={classes.inputfield}/>\r\n                            {\r\n                                addForm ? <Button className={classes.addBtn} onClick={() => addSubject(subjectToAdd)}>Add</Button> \r\n                                : <Button className={classes.addBtn} onClick={() => updateSubject({id: subjectToModify, name: subjectToAdd})}>Update</Button>\r\n                            }\r\n                        </FormControl>\r\n                    </div>\r\n                </Fade>\r\n            </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    subjects: state.subjects,\r\n    uireducer : state.uireducer\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetch: () => dispatch(fetchAllSubjects()),\r\n    getTopics: (subjectID) => dispatch(setActiveSubject(subjectID)),\r\n    addSubject: (subjectName) => dispatch(insertSubject(subjectName)),\r\n    removeSubject: subjectID => dispatch(deleteSubject(subjectID)),\r\n    updateSubject: subject => dispatch(modifySubject(subject))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Subjects);","import {\r\n    addTopic,\r\n    removeTopic,\r\n    updateTopic,\r\n    operationGoingOn,\r\n    operationDone\r\n} from '../action/action'\r\n\r\nimport firebase from '../firebase/firebase'\r\n\r\nexport const insertTopic = (subID, tName) => {\r\n    return dispatch => {\r\n        dispatch(operationGoingOn())\r\n        const db = firebase.firestore()\r\n        return db.collection('subjects')\r\n                .doc(subID)\r\n                .collection('Topics')\r\n                .add({\r\n                    name: tName\r\n                })\r\n                .then((docRef) => {\r\n                    dispatch(addTopic({subjectID: subID, topicName: tName}))\r\n                    dispatch(operationDone())\r\n                })\r\n                .catch(error => {\r\n                    console.log('Error ocured while inserting topic: ', error);\r\n                    dispatch(operationDone())\r\n                })\r\n    }\r\n}\r\n\r\nexport const deleteTopic = (subID, tID) => {\r\n    return dispatch => {\r\n        dispatch(operationGoingOn())\r\n        const db = firebase.firestore()\r\n        return db.collection('subjects')\r\n                .doc(subID)\r\n                .collection('Topics')\r\n                .doc(tID)\r\n                .delete()\r\n                .then((docRef) => {\r\n                    dispatch(removeTopic({subjectID: subID, topicID: tID}))\r\n                    dispatch({type: 'RESET_UI', payload:''})\r\n                    dispatch(operationDone())\r\n                })\r\n                .catch(error => {\r\n                    console.log('Error ocured while deleting topic: ', error);\r\n                    dispatch({type: 'RESET_UI', payload:''})\r\n                    dispatch(operationDone())\r\n                })\r\n    }\r\n}\r\n\r\n\r\nexport const modifyTopic = (updateDetails) => {  // {subjectID: id, topicID: id, topicName: name}\r\n    return dispatch => {\r\n        dispatch(operationGoingOn())\r\n        const db = firebase.firestore()\r\n        return db.collection('subjects')\r\n                .doc(updateDetails.subjectID)\r\n                .collection('Topics')\r\n                .doc(updateDetails.topicID)\r\n                .set({\r\n                    name: updateDetails.topicName\r\n                })\r\n                .then((docRef) => {\r\n                    dispatch(updateTopic({subjectID: updateDetails.subjectID, topicID: updateDetails.topicID, topicName: updateDetails.topicName}))\r\n                    dispatch(operationDone())\r\n                })\r\n                .catch(error => {\r\n                    console.log('Error ocured while updating topic: ', error);\r\n                    dispatch(operationDone())\r\n                })\r\n    }\r\n}","import React, {useEffect, useState} from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { setActiveTopic } from '../action/action'\r\n\r\nimport { insertTopic, deleteTopic, modifyTopic } from '../controller/topicsController'\r\n\r\nimport store from '../centralState/store'\r\n\r\nimport { useStyles } from '../styles/commonStyles'\r\n\r\nimport { \r\n    AppBar,\r\n    Toolbar,\r\n    List,\r\n    ListItem,\r\n    IconButton,\r\n    ButtonGroup,\r\n    Fade,\r\n    FormControl,\r\n    Button,\r\n    Input\r\n } from '@material-ui/core'\r\n import { \r\n     Edit,\r\n     Delete,\r\n     Add,\r\n     Close\r\n} from '@material-ui/icons'\r\n\r\n\r\n\r\n\r\nconst Topics = ({uireducer, data, getNotes, addTopic, removeTopic, updateTopic}) => {\r\n\r\n    const classes = useStyles()\r\n    \r\n    const [addForm, setAddForm] = useState(false)\r\n    const [updateForm, setUpdateForm] = useState(false)\r\n    const [topicToAdd, setTopicToAdd] = useState('')\r\n    const [topics, setTopics] = useState([])\r\n\r\n    useEffect(() => {\r\n        setTopics([])\r\n        console.log('Active Subject : ', uireducer.activeSubject);\r\n        if(uireducer.activeSubject){\r\n            console.log('Data : ', data.filter(subject => (subject.id === uireducer.activeSubject))[0].topics);\r\n            setTopics(data.filter(subject => (subject.id === uireducer.activeSubject))[0].topics)\r\n        }\r\n        console.log('State in topics : ', store.getState());\r\n    }, [uireducer.activeSubject, data])\r\n\r\n    return (\r\n            <>\r\n                <AppBar position=\"static\">\r\n                  <Toolbar>\r\n                    <p className={classes.head}>Topics</p>\r\n                    <IconButton className={classes.button} onClick={() => {setAddForm(true); setTopicToAdd('')}}>\r\n                      <Add />\r\n                    </IconButton>\r\n                  </Toolbar>\r\n               </AppBar>\r\n\r\n               {\r\n                   uireducer.isOperationGoingOn ? 'Please wait' : uireducer.isOperationGoingOn\r\n               }\r\n\r\n                <List>\r\n                    {\r\n                    topics.length > 0 ? topics.map(topic => {\r\n                        return (\r\n                            <ListItem button className={classes.listItem} key={topic.id} onClick={() => getNotes(topic.id)}>\r\n                                {topic.name}\r\n                                <ButtonGroup className={classes.editDelete}>\r\n                                        <IconButton className={classes.icon} onClick={() => {setUpdateForm(true); setTopicToAdd(topic.name); setAddForm(false); setAddForm(false)}}>\r\n                                            <Edit />\r\n                                        </IconButton>\r\n                                        <IconButton className={classes.icon} onClick={() => removeTopic(uireducer.activeSubject, topic.id)}>\r\n                                            <Delete />\r\n                                        </IconButton>\r\n                                </ButtonGroup>\r\n                            </ListItem>\r\n                        )\r\n                    }) : uireducer.activeSubject ? <div className={classes.waitMessage}><p>No topics yet</p></div> \r\n                        : <div className={classes.waitMessage}><p>Select subject to see topics</p></div>\r\n                    }\r\n                </List>\r\n\r\n                <Fade in={addForm || updateForm}>\r\n                    <div className={classes.formContainer}>\r\n                        <IconButton className={classes.closeBtn} onClick={() => { setAddForm(false); setUpdateForm(false) }}>\r\n                            <Close />\r\n                        </IconButton>\r\n                        <FormControl className={classes.form}>\r\n                            <Input \r\n                                placeholder= {addForm ? \"Add Topic\" : \"Update Topic\"} \r\n                                className={classes.inputfield}\r\n                                value={topicToAdd}\r\n                                onChange={(e) => setTopicToAdd(e.target.value)}\r\n                            />\r\n                            {\r\n                                addForm ? <Button className={classes.addBtn} onClick={() => addTopic(uireducer.activeSubject, topicToAdd)}>Add</Button>\r\n                                    : <Button className={classes.addBtn} onClick={() => updateTopic(uireducer.activeSubject, uireducer.activeTopic,topicToAdd)}>Update</Button>\r\n                            }\r\n                        </FormControl>\r\n                    </div>\r\n                </Fade>\r\n\r\n            </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    uireducer: state.uireducer,\r\n    data: state.subjects.data\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getNotes: (topicID) => dispatch(setActiveTopic(topicID)),\r\n    addTopic: (subjectID, topicName) => dispatch(insertTopic(subjectID, topicName)),\r\n    removeTopic: (subjectID, topicID) => dispatch(deleteTopic(subjectID, topicID)),\r\n    updateTopic: (subID, tID, tName) => dispatch(modifyTopic({subjectID: subID, topicID: tID, topicName: tName}))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Topics);  ","import {\r\n    addNote,\r\n    removeNote,\r\n    updateNote,\r\n    operationGoingOn,\r\n    operationDone\r\n} from '../action/action'\r\n\r\nimport firebase from '../firebase/firebase'\r\n\r\nexport const insertNote = (noteDetails) => {  // {subjectID : id, topicID: id, noteData: String}\r\n    return dispatch => {\r\n        dispatch(operationGoingOn())\r\n        const db = firebase.firestore()\r\n        return db.collection('subjects')\r\n            .doc(noteDetails.subjectID)\r\n            .collection('Topics')\r\n            .doc(noteDetails.topicID)\r\n            .collection('Notes')\r\n            .add({\r\n                note: noteDetails.noteData\r\n            })\r\n            .then((docRef) => {\r\n                dispatch(addNote({ id: docRef.id, subjectID: noteDetails.subjectID, topicID: noteDetails.topicID, noteData: noteDetails.noteData}))\r\n                dispatch(operationDone())\r\n            })\r\n            .catch(error => {\r\n                console.log('Error occured while inserting note : ', error);\r\n                dispatch(operationDone())\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteNote = (noteDetails) => {  // {subjectID : id, topicID: id, noteID: id}\r\n    return dispatch => {\r\n        dispatch(operationGoingOn())\r\n        const db = firebase.firestore()\r\n        return db.collection('subjects')\r\n            .doc(noteDetails.subjectID)\r\n            .collection('Topics')\r\n            .doc(noteDetails.topicID)\r\n            .collection('Notes')\r\n            .doc(noteDetails.noteID)\r\n            .delete()\r\n            .then((docRef) => {\r\n                dispatch(removeNote({ subjectID: noteDetails.subjectID, topicID: noteDetails.topicID, noteID: noteDetails.noteID}))\r\n                dispatch({type: 'RESET_NOTES', payload:''})\r\n                dispatch(operationDone())\r\n            })\r\n            .catch(error => {\r\n                console.log('Error occured while deleting note : ', error);\r\n                dispatch({type: 'RESET_UI', payload:''})\r\n                dispatch(operationDone())\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const modifyNote = (noteDetails) => {  // {subjectID : id, topicID: id, noteID: id, noteData: String}\r\n    return dispatch => {\r\n        dispatch(operationGoingOn())\r\n        const db = firebase.firestore()\r\n        return db.collection('subjects')\r\n            .doc(noteDetails.subjectID)\r\n            .collection('Topics')\r\n            .doc(noteDetails.topicID)\r\n            .collection('Notes')\r\n            .doc(noteDetails.noteID)\r\n            .set({\r\n                note: noteDetails.noteData\r\n            })\r\n            .then((docRef) => {\r\n                dispatch(updateNote({ subjectID: noteDetails.subjectID, topicID: noteDetails.topicID, noteID: noteDetails.noteID, noteData: noteDetails.noteData}))\r\n                dispatch(operationDone())\r\n            })\r\n            .catch(error => {\r\n                console.log('Error occured while updating note : ', error);\r\n                dispatch(operationDone())\r\n            })\r\n    }\r\n}","import React, {useEffect, useState} from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nimport { insertNote, deleteNote, modifyNote } from '../controller/notesController'\r\n\r\nimport { useStyles } from '../styles/commonStyles'\r\n\r\nimport { \r\n    List,\r\n    ListItem,\r\n    IconButton,\r\n    ButtonGroup,\r\n    AppBar,\r\n    Toolbar,\r\n    Input,\r\n    Button,\r\n    FormControl,\r\n    Fade\r\n } from '@material-ui/core'\r\n import { \r\n     Edit,\r\n     Delete,\r\n     Add,\r\n     Close\r\n} from '@material-ui/icons'\r\n\r\n\r\n\r\n\r\n\r\nconst Notes = ({uireducer, data, addNote, removeNote, updateNote}) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [notes, setNotes] = useState([])\r\n    const [addNoteForm, setAddNoteForm] = useState(false)\r\n    const [updateNoteForm, setUpdateNoteForm] = useState(false)\r\n    const [noteToUpdate, setNoteToUpdate] = useState('')\r\n    const [noteToAdd, setNoteToAdd] = useState('')\r\n\r\n    useEffect(() => {\r\n        setNotes([])\r\n        setNoteToUpdate('')\r\n        if(uireducer.activeTopic){\r\n            setNotes(data.filter(subject => (subject.id === uireducer.activeSubject))[0].topics.filter(topic => topic.id === uireducer.activeTopic)[0].notes)\r\n        }\r\n    }, [uireducer.activeTopic, data])\r\n\r\n    return (\r\n            <>\r\n                <AppBar position=\"static\">\r\n                  <Toolbar>\r\n                    <p className={classes.head}>Notes</p>\r\n                    <IconButton className={classes.button} onClick={() => {setAddNoteForm(true); setNoteToAdd('')}}>\r\n                      <Add />\r\n                    </IconButton>\r\n                  </Toolbar>\r\n                </AppBar>\r\n\r\n                <List>\r\n                    {\r\n                    notes.length > 0 ? notes.map(note => {\r\n                        return (\r\n                            <ListItem button className={classes.listItem} id={note.id} key={note.id}>\r\n                                {note.noteData}\r\n                                <ButtonGroup className={classes.editDelete}>\r\n                                        <IconButton className={classes.icon} onClick={() => {setUpdateNoteForm(true); setNoteToUpdate(note.id); setNoteToAdd(note.noteData); setAddNoteForm(false)}}>\r\n                                            <Edit />\r\n                                        </IconButton>\r\n                                        <IconButton className={classes.icon} onClick={() => removeNote(uireducer.activeSubject, uireducer.activeTopic, note.id)}>\r\n                                            <Delete />\r\n                                        </IconButton>\r\n                                </ButtonGroup>\r\n                            </ListItem>\r\n                        )\r\n                    }) : uireducer.activeTopic ? <div className={classes.waitMessage}><p>No notes Yet</p></div> \r\n                        : <div className={classes.waitMessage}><p>Select topic to see notes</p></div> \r\n                    }\r\n                </List>\r\n\r\n                <Fade in={addNoteForm || updateNoteForm}>\r\n                    <div className={classes.formContainer}>\r\n                        <IconButton className={classes.closeBtn} onClick={() => {setAddNoteForm(false); setUpdateNoteForm(false)}}>\r\n                            <Close />\r\n                        </IconButton>\r\n                        <FormControl className={classes.form}>\r\n                            <Input \r\n                                placeholder= {addNoteForm ? \"Add Note\" : \"Update Note\" } \r\n                                className={classes.inputfield}\r\n                                value={noteToAdd}\r\n                                onChange={e => setNoteToAdd(e.target.value)}\r\n                            />\r\n                            {\r\n                                addNoteForm ? <Button className={classes.addBtn} onClick={() => addNote(uireducer.activeSubject, uireducer.activeTopic, noteToAdd)}>Add</Button>\r\n                                    : <Button className={classes.addBtn} onClick={() => updateNote(uireducer.activeSubject, uireducer.activeTopic, noteToUpdate, noteToAdd)}>Update</Button>\r\n                            }\r\n                        </FormControl>\r\n                    </div>\r\n                </Fade>\r\n\r\n            </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    uireducer: state.uireducer,\r\n    data: state.subjects.data\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addNote: (subID, tID, data) => dispatch(insertNote({subjectID: subID, topicID: tID, noteData: data})),\r\n    removeNote: (subID, tID, nID) => dispatch(deleteNote({subjectID: subID, topicID: tID, noteID: nID})),\r\n    updateNote: (subID, tID, nID, data) => dispatch(modifyNote({subjectID: subID, topicID: tID, noteID: nID, noteData: data}))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes);  ","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\n\r\nimport {Loading} from './loading'\r\n\r\n\r\nimport '../App.css'\r\nimport Subjects from './subjects'\r\nimport Topics from './topics'\r\nimport Notes from './notes'\r\n\r\n\r\nconst Main = ({uireducer}) => {\r\n\r\n   \r\n\r\n  return(\r\n         <>\r\n          {uireducer.isOperationGoingOn ? <div><Loading /></div> : ''}\r\n               <div className=\"container\">\r\n                  <div className=\"section\">\r\n                     <Subjects />\r\n                  </div>\r\n                  <div className=\"section\">\r\n                     <Topics />\r\n                  </div>\r\n                  <div className=\"section\">\r\n                     <Notes/>\r\n                  </div>\r\n               </div>\r\n         </>\r\n  )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    uireducer: state.uireducer\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","import React from 'react'\n\nimport Main from './component/main'\n\n// redux\nimport { Provider } from 'react-redux'\nimport store from './centralState/store'\n\n\nconst App = () => {\n\n  return(\n      <Provider store={store}>\n        <Main />\n      </Provider>\n  )\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}